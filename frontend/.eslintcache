[{"/frontend/src/pages/options/Options.tsx":"1","/frontend/src/pages/options/components/OptionFormModal.tsx":"2","/frontend/src/pages/options/optionSlice.ts":"3","/frontend/src/index.tsx":"4","/frontend/src/common/templates/GenericTemplate.tsx":"5","/frontend/src/common/components/CommonMaterialTable.tsx":"6","/frontend/src/features/counter/counterSlice.ts":"7"},{"size":3663,"mtime":1609145525300,"results":"8","hashOfConfig":"9"},{"size":2978,"mtime":1609129037070,"results":"10","hashOfConfig":"9"},{"size":4373,"mtime":1609122111490,"results":"11","hashOfConfig":"9"},{"size":1302,"mtime":1609128068630,"results":"12","hashOfConfig":"9"},{"size":7449,"mtime":1608703436680,"results":"13","hashOfConfig":"9"},{"size":3276,"mtime":1609146075660,"results":"14","hashOfConfig":"9"},{"size":1851,"mtime":1608179604551,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},"a0njdd",{"filePath":"18","messages":"19","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/frontend/src/pages/options/Options.tsx",["33","34","35","36","37","38","39","40","41","42","43","44","45","46","47","48","49"],"/frontend/src/pages/options/components/OptionFormModal.tsx",["50","51"],"import React, { useState } from \"react\";\nimport { makeStyles, Theme } from \"@material-ui/core/styles\";\nimport { Button, TextField, Modal } from \"@material-ui/core\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { AppDispatch } from \"../../../app/store\";\nimport {\n  initialState,\n  selectEditedOption,\n  fetchAsyncCreateOption,\n} from \"../optionSlice\";\nimport SaveIcon from \"@material-ui/icons/Save\";\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  field: {\n    margin: theme.spacing(2),\n    minWidth: 240,\n  },\n  saveModal: {\n    marginTop: theme.spacing(4),\n    marginLeft: theme.spacing(2),\n  },\n  paper: {\n    position: \"absolute\",\n    textAlign: \"center\",\n    width: 400,\n    backgroundColor: theme.palette.background.paper,\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3),\n  },\n}));\n\nconst getModalStyle = () => {\n  const top = 50;\n  const left = 50;\n  // フォントサイズの変更方法がわからない\n  const font_size = 60;\n\n  return {\n    top: `${top}%`,\n    left: `${left}%`,\n    font_size: `${font_size}px`,\n    transform: `translate(-${top}%, -${left}%)`,\n  };\n};\n\nconst OptionFormModal: React.FC = (props) => {\n  const classes = useStyles();\n  const dispatch: AppDispatch = useDispatch();\n\n  const editedOption = useSelector(selectEditedOption);\n\n  const [open, setOpen] = useState(false);\n  const [modalStyle] = useState(getModalStyle);\n  const [inputText, setInputText] = useState(\"\");\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    setOpen(false);\n  };\n  \n  const isDisabled =\n    editedOption.option.length === 0 ||\n    editedOption.description.length === 0 ||\n    editedOption.criteria.length === 0;\n\n  const isOptDisabled = inputText.length === 0;\n\n  const handleInputTextChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setInputText(e.target.value);\n  };\n\n  return (\n    <div>\n      <Button variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\n        新規登録\n      </Button>\n      <form>\n        <Modal open={open} onClose={handleClose}>\n          <div style={modalStyle} className={classes.paper}>\n            <TextField\n              className={classes.field}\n              InputLabelProps={{\n                shrink: true,\n              }}\n              label=\"登録オプション\"\n              type=\"text\"\n              value={inputText}\n              onChange={handleInputTextChange}\n            />\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              size=\"small\"\n              className={classes.saveModal}\n              startIcon={<SaveIcon />}\n              disabled={isOptDisabled}\n              onClick={() => {\n                dispatch(fetchAsyncCreateOption(inputText));\n                handleClose();\n              }}\n            >\n              登録\n            </Button>\n          </div>\n        </Modal>\n      </form>\n    </div>\n  );\n};\n\nexport default OptionFormModal;\n","/frontend/src/pages/options/optionSlice.ts",["52"],"import { selectCount } from \"./../../features/counter/counterSlice\";\nimport { createSlice, PayloadAction, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport { RootState } from \"../../app/store\";\nimport axios from \"axios\";\nimport { OPTION, OPTION_STATE, POST_OPTION, READ_OPTION } from \"./optionTypes\";\n\nexport const fetchAsyncGetOptions = createAsyncThunk(\n  \"option/getOption\",\n  async () => {\n    const res = await axios.get<READ_OPTION[]>(\n      `${process.env.REACT_APP_API_URL}/api/options/`,\n      {\n        headers: {\n          //   Authorization: `JWT ${localStorage.localJWT}`,\n        },\n      }\n    );\n    return res.data;\n  }\n);\n\nexport const fetchAsyncCreateOption = createAsyncThunk(\n  \"optin/createOption\",\n  async (name: string) => {\n    const res = await axios.post<OPTION>(\n      `${process.env.REACT_APP_API_URL}/api/options/`,\n      { name: name, is_deleted: false },\n      {\n        headers: {\n          // Authorization: `JWT ${localStorage.localJWT}`,\n        },\n      }\n    );\n    return res.data;\n  }\n);\n\nexport const fetchAsyncUpdateOption = createAsyncThunk(\n  \"option/updateOption\",\n  async (option: POST_OPTION) => {\n    const res = await axios.put<READ_OPTION>(\n      `${process.env.REACT_APP_API_URL}/api/options/${option.id}/`,\n      option,\n      {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          // Authorization: `JWT ${localStorage.localJWT}`,\n        },\n      }\n    );\n    return res.data;\n  }\n);\n\nexport const fetchAsyncDeleteOption = createAsyncThunk(\n  \"option/deleteOption\",\n  async (id: number) => {\n    await axios.delete(`${process.env.REACT_APP_API_URL}/api/options/${id}/`, {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `JWT ${localStorage.localJWT}`,\n      },\n    });\n    return id;\n  }\n);\n\nexport const initialState: OPTION_STATE = {\n  options: [\n    {\n      id: 0,\n      is_deleted: false,\n      created_at: \"\",\n      updated_at: \"\",\n    },\n  ],\n  editedOption: {\n    id: 0,\n    name: \"\",\n    option: \"\",\n    description: \"\",\n    criteria: \"\",\n  },\n  selectedOption: {\n    id: 0,\n    is_deleted: false,\n    created_at: \"\",\n    updated_at: \"\",\n  },\n};\n\nconst optionSlice = createSlice({\n  name: \"option\",\n  initialState,\n  reducers: {\n    editOption(state, action: PayloadAction<POST_OPTION>) {\n      state.editedOption = action.payload;\n    },\n    selectOption(state, action: PayloadAction<READ_OPTION>) {\n      state.selectedOption = action.payload;\n    },\n  },\n  extraReducers: (builder) => {\n    builder.addCase(\n      fetchAsyncGetOptions.fulfilled,\n      (state, action: PayloadAction<READ_OPTION[]>) => {\n        return {\n          ...state,\n          options: action.payload,\n        };\n      }\n    );\n    builder.addCase(fetchAsyncGetOptions.rejected, () => {\n      window.location.href = \"/\";\n    });\n    builder.addCase(\n      fetchAsyncCreateOption.fulfilled,\n      (state, action: PayloadAction<OPTION>) => {\n        return {\n          ...state,\n          option: [...state.options, action.payload],\n        };\n      }\n    );\n    builder.addCase(\n      fetchAsyncUpdateOption.fulfilled,\n      (state, action: PayloadAction<READ_OPTION>) => {\n        return {\n          ...state,\n          options: state.options.map((t) =>\n            t.id === action.payload.id ? action.payload : t\n          ),\n          editedOption: initialState.editedOption,\n          selectedOption: initialState.selectedOption,\n        };\n      }\n    );\n    builder.addCase(fetchAsyncUpdateOption.rejected, () => {\n      window.location.href = \"/\";\n    });\n    builder.addCase(\n      fetchAsyncDeleteOption.fulfilled,\n      (state, action: PayloadAction<number>) => {\n        return {\n          ...state,\n          options: state.options.filter((t) => t.id !== action.payload),\n          editedOption: initialState.editedOption,\n          selectedoption: initialState.selectedOption,\n        };\n      }\n    );\n    builder.addCase(fetchAsyncDeleteOption.rejected, () => {\n      window.location.href = \"/\";\n    });\n  },\n});\n\nexport const { editOption, selectOption } = optionSlice.actions;\nexport const selectSelectedOption = (state: RootState) =>\n  state.option.selectedOption;\nexport const selectEditedOption = (state: RootState) =>\n  state.option.editedOption;\nexport const selectOptions = (state: RootState) => state.option.options;\nexport default optionSlice.reducer;\n","/frontend/src/index.tsx",[],"/frontend/src/common/templates/GenericTemplate.tsx",["53","54","55","56"],"import React from \"react\";\nimport clsx from \"clsx\";\nimport * as colors from \"@material-ui/core/colors\";\nimport {\n  makeStyles,\n  createStyles,\n  Theme,\n  createMuiTheme,\n  ThemeProvider,\n} from \"@material-ui/core/styles\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport {\n  Drawer,\n  Box,\n  Toolbar,\n  AppBar,\n  List,\n  IconButton,\n  ListItem,\n  ListItemIcon,\n  ListItemText,\n} from \"@material-ui/core\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Divider from \"@material-ui/core/Divider\";\nimport { Link } from \"react-router-dom\";\nimport {\n  Menu as MenuIcon,\n  EventAvailable as EventAvailableIcon,\n  ChevronLeft as ChevronLeftIcon,\n  Face as FaceIcon,\n  AccountCircle as AccountCircleIcon,\n  Schedule as ScheduleIcon,\n  Business as BusinessIcon,\n  RecentActors as RecentActorsIcon,\n  LocalHospital as LocalHospitalIcon,\n  FeaturedPlayList as FeaturedPlayListIcon,\n\n  Contacts as ContactsIcon\n} from \"@material-ui/icons\";\n// import Copyright from \"./Copyright\"\n\nconst drawerWidth = 240;\n\nconst theme = createMuiTheme({\n  typography: {\n    fontFamily: [\n      \"Noto Sans JP\",\n      \"Lato\",\n      \"游ゴシック Medium\",\n      \"游ゴシック体\",\n      \"Yu Gothic Medium\",\n      \"YuGothic\",\n      \"ヒラギノ角ゴ ProN\",\n      \"Hiragino Kaku Gothic ProN\",\n      \"メイリオ\",\n      \"Meiryo\",\n      \"ＭＳ Ｐゴシック\",\n      \"MS PGothic\",\n      \"sans-serif\",\n    ].join(\",\"),\n  },\n  palette: {\n    primary: { main: colors.blue[500] }, // テーマの色\n  },\n});\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      display: \"flex\",\n    },\n    toolbar: {\n      paddingRight: 24,\n    },\n    toolbarIcon: {\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"flex-end\",\n      padding: \"0 8px\",\n      ...theme.mixins.toolbar,\n    },\n    appBar: {\n      zIndex: theme.zIndex.drawer + 1,\n      transition: theme.transitions.create([\"width\", \"margin\"], {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen,\n      }),\n    },\n    appBarShift: {\n      marginLeft: drawerWidth,\n      width: `calc(100% - ${drawerWidth}px)`,\n      transition: theme.transitions.create([\"width\", \"margin\"], {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.enteringScreen,\n      }),\n    },\n    menuButton: {\n      marginRight: 36,\n    },\n    menuButtonHidden: {\n      display: \"none\",\n    },\n    title: {\n      flexGrow: 1,\n    },\n    pageTitle: {\n      marginBottom: theme.spacing(1),\n    },\n    drawerPaper: {\n      position: \"relative\",\n      whiteSpace: \"nowrap\",\n      width: drawerWidth,\n      transition: theme.transitions.create(\"width\", {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.enteringScreen,\n      }),\n    },\n    drawerPaperClose: {\n      overflowX: \"hidden\",\n      transition: theme.transitions.create(\"width\", {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen,\n      }),\n      width: theme.spacing(7),\n      [theme.breakpoints.up(\"sm\")]: {\n        width: theme.spacing(9),\n      },\n    },\n    appBarSpacer: theme.mixins.toolbar,\n    content: {\n      flexGrow: 1,\n      height: \"100vh\",\n      overflow: \"auto\",\n    },\n    container: {\n      paddingTop: theme.spacing(4),\n      paddingBottom: theme.spacing(4),\n    },\n    paper: {\n      padding: theme.spacing(2),\n      display: \"flex\",\n      overflow: \"auto\",\n      flexDirection: \"column\",\n    },\n    link: {\n      textDecoration: \"none\",\n      color: theme.palette.text.secondary,\n    },\n  })\n);\n\nconst Copyright = () => {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {\"Copyright © \"}\n      <Link color=\"inherit\" to=\"/\">\n        契約管理システム\n      </Link>{\" \"}\n      {new Date().getFullYear()}\n      {\".\"}\n    </Typography>\n  );\n};\n\nexport interface GenericTemplateProps {\n  children: React.ReactNode;\n  title: string;\n}\n\nconst GenericTemplate: React.FC<GenericTemplateProps> = ({\n  children,\n  title,\n}) => {\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(true);\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <ThemeProvider theme={theme}>\n      <div className={classes.root}>\n        <CssBaseline />\n        <AppBar\n          position=\"absolute\"\n          className={clsx(classes.appBar, open && classes.appBarShift)}\n        >\n          <Toolbar className={classes.toolbar}>\n            <IconButton\n              edge=\"start\"\n              color=\"inherit\"\n              aria-label=\"open drawer\"\n              onClick={handleDrawerOpen}\n              className={clsx(\n                classes.menuButton,\n                open && classes.menuButtonHidden\n              )}\n            >\n              <MenuIcon />\n            </IconButton>\n            <Typography\n              component=\"h1\"\n              variant=\"h6\"\n              color=\"inherit\"\n              noWrap\n              className={classes.title}\n            >\n              契約管理システム\n            </Typography>\n          </Toolbar>\n        </AppBar>\n        <Drawer\n          variant=\"permanent\"\n          classes={{\n            paper: clsx(classes.drawerPaper, !open && classes.drawerPaperClose),\n          }}\n          open={open}\n        >\n          <div className={classes.toolbarIcon}>\n            <IconButton onClick={handleDrawerClose}>\n              <ChevronLeftIcon />\n            </IconButton>\n          </div>\n          <Divider />\n          <List>\n            <Link to=\"/\" className={classes.link}>\n              <ListItem button>\n                <ListItemIcon>\n                  <ContactsIcon />\n                </ListItemIcon>\n                <ListItemText primary=\"契約管理\" />\n              </ListItem>\n            </Link>\n            <Link to=\"/companies\" className={classes.link}>\n              <ListItem button>\n                <ListItemIcon>\n                  <BusinessIcon />\n                </ListItemIcon>\n                <ListItemText primary=\"企業マスタ\" />\n              </ListItem>\n            </Link>\n            <Link to=\"/courses\" className={classes.link}>\n              <ListItem button>\n                <ListItemIcon>\n                  <FeaturedPlayListIcon />\n                </ListItemIcon>\n                <ListItemText primary=\"コースマスタ\" />\n              </ListItem>\n            </Link>\n            <Link to=\"/options\" className={classes.link}>\n              <ListItem button>\n                <ListItemIcon>\n                  <LocalHospitalIcon />\n                </ListItemIcon>\n                <ListItemText primary=\"オプションマスタ\" />\n              </ListItem>\n            </Link>\n            <Link to=\"/users\" className={classes.link}>\n              <ListItem button>\n                <ListItemIcon>\n                <AccountCircleIcon />\n                </ListItemIcon>\n                <ListItemText primary=\"ユーザマスタ\" />\n              </ListItem>\n            </Link>\n          </List>\n        </Drawer>\n        <main className={classes.content}>\n          <div className={classes.appBarSpacer} />\n          {children}\n          <Box pt={4}>\n            <Copyright />\n          </Box>\n        </main>\n      </div>\n    </ThemeProvider>\n  );\n};\n\nexport default GenericTemplate;\n","/frontend/src/common/components/CommonMaterialTable.tsx",["57","58","59","60","61"],"/frontend/src/features/counter/counterSlice.ts",[],{"ruleId":"62","severity":1,"message":"63","line":5,"column":8,"nodeType":"64","messageId":"65","endLine":5,"endColumn":21},{"ruleId":"62","severity":1,"message":"66","line":5,"column":25,"nodeType":"64","messageId":"65","endLine":5,"endColumn":38},{"ruleId":"62","severity":1,"message":"67","line":10,"column":10,"nodeType":"64","messageId":"65","endLine":10,"endColumn":22},{"ruleId":"62","severity":1,"message":"68","line":10,"column":24,"nodeType":"64","messageId":"65","endLine":10,"endColumn":35},{"ruleId":"62","severity":1,"message":"69","line":10,"column":37,"nodeType":"64","messageId":"65","endLine":10,"endColumn":48},{"ruleId":"62","severity":1,"message":"70","line":12,"column":3,"nodeType":"64","messageId":"65","endLine":12,"endColumn":23},{"ruleId":"62","severity":1,"message":"71","line":13,"column":3,"nodeType":"64","messageId":"65","endLine":13,"endColumn":25},{"ruleId":"62","severity":1,"message":"72","line":14,"column":3,"nodeType":"64","messageId":"65","endLine":14,"endColumn":25},{"ruleId":"62","severity":1,"message":"73","line":15,"column":3,"nodeType":"64","messageId":"65","endLine":15,"endColumn":25},{"ruleId":"62","severity":1,"message":"74","line":19,"column":8,"nodeType":"64","messageId":"65","endLine":19,"endColumn":23},{"ruleId":"62","severity":1,"message":"75","line":46,"column":9,"nodeType":"64","messageId":"65","endLine":46,"endColumn":30},{"ruleId":"62","severity":1,"message":"76","line":47,"column":9,"nodeType":"64","messageId":"65","endLine":47,"endColumn":21},{"ruleId":"62","severity":1,"message":"77","line":49,"column":9,"nodeType":"64","messageId":"65","endLine":49,"endColumn":14},{"ruleId":"62","severity":1,"message":"78","line":51,"column":10,"nodeType":"64","messageId":"65","endLine":51,"endColumn":22},{"ruleId":"62","severity":1,"message":"79","line":53,"column":9,"nodeType":"64","messageId":"65","endLine":53,"endColumn":21},{"ruleId":"80","severity":1,"message":"81","line":84,"column":20,"nodeType":"82","messageId":"83","endLine":84,"endColumn":27,"fix":"84"},{"ruleId":"85","severity":1,"message":"86","line":96,"column":6,"nodeType":"87","endLine":96,"endColumn":8,"suggestions":"88"},{"ruleId":"62","severity":1,"message":"89","line":7,"column":3,"nodeType":"64","messageId":"65","endLine":7,"endColumn":15},{"ruleId":"62","severity":1,"message":"90","line":63,"column":9,"nodeType":"64","messageId":"65","endLine":63,"endColumn":19},{"ruleId":"62","severity":1,"message":"91","line":1,"column":10,"nodeType":"64","messageId":"65","endLine":1,"endColumn":21},{"ruleId":"62","severity":1,"message":"92","line":28,"column":21,"nodeType":"64","messageId":"65","endLine":28,"endColumn":39},{"ruleId":"62","severity":1,"message":"93","line":30,"column":11,"nodeType":"64","messageId":"65","endLine":30,"endColumn":19},{"ruleId":"62","severity":1,"message":"94","line":32,"column":15,"nodeType":"64","messageId":"65","endLine":32,"endColumn":27},{"ruleId":"62","severity":1,"message":"95","line":34,"column":19,"nodeType":"64","messageId":"65","endLine":34,"endColumn":35},{"ruleId":"62","severity":1,"message":"96","line":2,"column":10,"nodeType":"64","messageId":"65","endLine":2,"endColumn":21},{"ruleId":"62","severity":1,"message":"97","line":6,"column":8,"nodeType":"64","messageId":"65","endLine":6,"endColumn":23},{"ruleId":"62","severity":1,"message":"75","line":55,"column":9,"nodeType":"64","messageId":"65","endLine":55,"endColumn":30},{"ruleId":"80","severity":1,"message":"81","line":78,"column":20,"nodeType":"82","messageId":"83","endLine":78,"endColumn":27,"fix":"98"},{"ruleId":"85","severity":1,"message":"86","line":90,"column":6,"nodeType":"87","endLine":90,"endColumn":8,"suggestions":"99"},"@typescript-eslint/no-unused-vars","'MaterialTable' is defined but never used.","Identifier","unusedVar","'MTableToolbar' is defined but never used.","'OPTION_STATE' is defined but never used.","'POST_OPTION' is defined but never used.","'READ_OPTION' is defined but never used.","'fetchAsyncGetOptions' is defined but never used.","'fetchAsyncCreateOption' is defined but never used.","'fetchAsyncDeleteOption' is defined but never used.","'fetchAsyncUpdateOption' is defined but never used.","'OptionFormModal' is defined but never used.","'dispatch' is assigned a value but never used.","'editedOption' is assigned a value but never used.","'title' is assigned a value but never used.","'toolberStyle' is assigned a value but never used.","'localization' is assigned a value but never used.","@typescript-eslint/no-array-constructor","The array literal notation [] is preferable.","CallExpression","useLiteral",{"range":"100","text":"101"},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'targetURL'. Either include it or remove the dependency array.","ArrayExpression",["102"],"'initialState' is defined but never used.","'isDisabled' is assigned a value but never used.","'selectCount' is defined but never used.","'EventAvailableIcon' is defined but never used.","'FaceIcon' is defined but never used.","'ScheduleIcon' is defined but never used.","'RecentActorsIcon' is defined but never used.","'useSelector' is defined but never used.","'GenericTemplate' is defined but never used.",{"range":"103","text":"101"},["104"],[2195,2202],"[]",{"desc":"105","fix":"106"},[2017,2024],{"desc":"105","fix":"107"},"Update the dependencies array to be: [targetURL]",{"range":"108","text":"109"},{"range":"110","text":"109"},[2470,2472],"[targetURL]",[2289,2291]]