[{"/frontend/src/common/components/CommonMaterialTable.tsx":"1","/frontend/src/pages/options/components/OptionFormModal.tsx":"2","/frontend/src/features/counter/counterSlice.ts":"3","/frontend/src/pages/options/Options.tsx":"4"},{"size":3572,"mtime":1610099641280,"results":"5","hashOfConfig":"6"},{"size":3199,"mtime":1609905663560,"results":"7","hashOfConfig":"6"},{"size":1851,"mtime":1608179604551,"results":"8","hashOfConfig":"6"},{"size":1959,"mtime":1610088887260,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},"a0njdd",{"filePath":"12","messages":"13","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"14"},{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"17","messages":"18","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/frontend/src/common/components/CommonMaterialTable.tsx",["19","20","21","22","23","24"],"/frontend/src/pages/options/components/OptionFormModal.tsx",["25"],"import React, { useState } from \"react\";\nimport { makeStyles, Theme } from \"@material-ui/core/styles\";\nimport { Button, TextField, Modal } from \"@material-ui/core\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { AppDispatch } from \"../../../app/store\";\nimport {\n  initialState,\n  // selectEditedOption,\n  // fetchAsyncCreateOption,\n} from \"../optionSlice\";\nimport SaveIcon from \"@material-ui/icons/Save\";\nimport { editOption } from \"../../options/optionSlice\";\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  field: {\n    margin: theme.spacing(2),\n    minWidth: 240,\n  },\n  saveModal: {\n    marginTop: theme.spacing(4),\n    marginLeft: theme.spacing(2),\n  },\n  paper: {\n    position: \"absolute\",\n    textAlign: \"center\",\n    width: 400,\n    backgroundColor: theme.palette.background.paper,\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3),\n  },\n}));\n\nconst getModalStyle = () => {\n  const top = 50;\n  const left = 50;\n  // フォントサイズの変更方法がわからない\n  const font_size = 60;\n\n  return {\n    top: `${top}%`,\n    left: `${left}%`,\n    font_size: `${font_size}px`,\n    transform: `translate(-${top}%, -${left}%)`,\n  };\n};\n\nconst OptionFormModal: React.FC = (props) => {\n  const classes = useStyles();\n  const dispatch: AppDispatch = useDispatch();\n\n  // const editedOption = useSelector(selectEditedOption);\n\n  const [open, setOpen] = useState(false);\n  const [modalStyle] = useState(getModalStyle);\n  const [inputText, setInputText] = useState(\"\");\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  // const isDisabled =\n  //   editedOption.option.length === 0 ||\n  //   editedOption.description.length === 0 ||\n  //   editedOption.criteria.length === 0;\n\n  const isOptDisabled = inputText.length === 0;\n\n  const handleInputTextChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setInputText(e.target.value);\n  };\n\n  return (\n    <div>\n      <Button variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\n        新規登録\n      </Button>\n      <form>\n        <Modal open={open} onClose={handleClose}>\n          <div style={modalStyle} className={classes.paper}>\n            <TextField\n              className={classes.field}\n              InputLabelProps={{\n                shrink: true,\n              }}\n              label=\"登録オプション\"\n              type=\"text\"\n              value={inputText}\n              onChange={handleInputTextChange}\n            />\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              size=\"small\"\n              className={classes.saveModal}\n              startIcon={<SaveIcon />}\n              disabled={isOptDisabled}\n              onClick={() => {\n                // dispatch(fetchAsyncCreateOption(inputText));\n                dispatch(editOption(initialState.editedOption));\n                console.log(dispatch(editOption(initialState.editedOption)));\n                handleClose();\n              }}\n            >\n              登録\n            </Button>\n          </div>\n        </Modal>\n      </form>\n    </div>\n  );\n};\n\nexport default OptionFormModal;\n","/frontend/src/features/counter/counterSlice.ts",[],"/frontend/src/pages/options/Options.tsx",["26","27","28","29","30"],{"ruleId":"31","severity":1,"message":"32","line":11,"column":3,"nodeType":"33","messageId":"34","endLine":11,"endColumn":23},{"ruleId":"31","severity":1,"message":"35","line":13,"column":3,"nodeType":"33","messageId":"34","endLine":13,"endColumn":15},{"ruleId":"31","severity":1,"message":"36","line":47,"column":9,"nodeType":"33","messageId":"34","endLine":47,"endColumn":30},{"ruleId":"31","severity":1,"message":"37","line":67,"column":10,"nodeType":"33","messageId":"34","endLine":67,"endColumn":15},{"ruleId":"38","severity":1,"message":"39","line":79,"column":20,"nodeType":"40","messageId":"41","endLine":79,"endColumn":27,"fix":"42"},{"ruleId":"43","severity":1,"message":"44","line":91,"column":6,"nodeType":"45","endLine":91,"endColumn":8,"suggestions":"46"},{"ruleId":"31","severity":1,"message":"47","line":4,"column":10,"nodeType":"33","messageId":"34","endLine":4,"endColumn":21},{"ruleId":"31","severity":1,"message":"48","line":6,"column":10,"nodeType":"33","messageId":"34","endLine":6,"endColumn":21},{"ruleId":"31","severity":1,"message":"49","line":6,"column":23,"nodeType":"33","messageId":"34","endLine":6,"endColumn":34},{"ruleId":"31","severity":1,"message":"50","line":12,"column":3,"nodeType":"33","messageId":"34","endLine":12,"endColumn":23},{"ruleId":"43","severity":1,"message":"51","line":41,"column":6,"nodeType":"45","endLine":41,"endColumn":16,"suggestions":"52"},{"ruleId":"31","severity":1,"message":"53","line":45,"column":9,"nodeType":"33","messageId":"34","endLine":45,"endColumn":16},"@typescript-eslint/no-unused-vars","'fetchAsyncGetOptions' is defined but never used.","Identifier","unusedVar","'initialState' is defined but never used.","'dispatch' is assigned a value but never used.","'state' is assigned a value but never used.","@typescript-eslint/no-array-constructor","The array literal notation [] is preferable.","CallExpression","useLiteral",{"range":"54","text":"55"},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props.targetURL'. Either include it or remove the dependency array.","ArrayExpression",["56"],"'useSelector' is defined but never used.","'READ_OPTION' is defined but never used.","'POST_OPTION' is defined but never used.","'fetchAsyncCreateTask' is defined but never used.","React Hook useEffect has a missing dependency: 'options'. Either include it or remove the dependency array.",["57"],"'entries' is assigned a value but never used.",[1895,1902],"[]",{"desc":"58","fix":"59"},{"desc":"60","fix":"61"},"Update the dependencies array to be: [props.targetURL]",{"range":"62","text":"63"},"Update the dependencies array to be: [dispatch, options]",{"range":"64","text":"65"},[2167,2169],"[props.targetURL]",[1345,1355],"[dispatch, options]"]